<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>war</packaging> 
    <groupId>org.springframework</groupId>
    <artifactId>pruworld</artifactId>
    <version>0.1.0</version>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.0.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>


    <dependencies>
		
	<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

<dependency>  
     <groupId>javax.servlet</groupId>  
     <artifactId>servlet-api</artifactId>  
     <version>2.5</version>  
 </dependency>

    <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>fabric8-project</artifactId>
        <version>2.2.0.redhat-079</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.jboss.fuse.bom</groupId>
        <artifactId>jboss-fuse-parent</artifactId>
        <version>6.2.1.redhat-084</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

    </dependencies>

    <properties>
		<java.version>1.7</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Docker & Fabric8 Configs -->
		<docker.from>jboss-fuse-6/fis-java-openshift:1.0</docker.from>
		<fabric8.dockerUser>fabric8/</fabric8.dockerUser>
		<docker.image>${fabric8.dockerUser}${project.artifactId}:${project.version}</docker.image>
		<docker.port.container.jolokia>8778</docker.port.container.jolokia>

		<fabric8.label.component>${project.artifactId}</fabric8.label.component>
		<fabric8.label.container>java</fabric8.label.container>
		<fabric8.label.group>quickstarts</fabric8.label.group>
		<fabric8.iconRef>java</fabric8.iconRef>
		
		<fabric8.service.name>my-service</fabric8.service.name>
    <fabric8.service.port>8080</fabric8.service.port>
    <fabric8.service.containerPort>8080</fabric8.service.containerPort>
  <fabric8.service.headless>true</fabric8.service.headless>

    </properties>
    <build>
        <plugins>
		 <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>fabric8-maven-plugin</artifactId>
        <version>2.2.0.redhat-079</version>
        <executions>
          <execution>
            <id>json</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>json</goal>
            </goals>
          </execution>
          <execution>
            <id>attach</id>
            <phase>package</phase>
            <goals>
              <goal>attach</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>hawt-app-maven-plugin</artifactId>
        <version>2.2.0.redhat-079</version>
        <executions>
          <execution>
            <id>hawt-app</id>
            <goals>
				<goal>build</goal>
			</goals>
            <configuration>
              <javaMainClass>com.example.HolaSpringbootApplication</javaMainClass>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
           <groupId>org.springframework.boot</groupId>
           <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
			
     <plugin>
        <groupId>org.jolokia</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.13.6</version>
        <configuration>
          <images>
            <image>
              <name>${docker.image}</name>
              <build>
                <from>jboss-fuse-6/fis-java-openshift:1.0</from>
				
				<assembly>
                  <basedir>/deployments</basedir>
                  <descriptorRef>hawt-app</descriptorRef>
		  <mode>tar</mode>
                </assembly>
				<env>
                  <JAVA_LIB_DIR>/deployments/lib</JAVA_LIB_DIR>
                  <JAVA_MAIN_CLASS>com.example.HolaSpringbootApplication</JAVA_MAIN_CLASS>
                </env>
              </build>
            </image>
          </images>
        </configuration>
      </plugin>
			
			
        </plugins>
    </build>

 <repositories>
 <repository>
	<id>spring-release</id>
	<url>https://repo.spring.io/lib-release</url>
 </repository>
 <repository>
	<id>fusesource.m2</id>
	<url>http://repo.fusesource.com/nexus/content/groups/public</url>
 </repository>
</repositories>
<pluginRepositories>
 <pluginRepository>
	<id>spring-release</id>
	<url>https://repo.spring.io/lib-release</url>
 </pluginRepository>

 <pluginRepository>
	<id>fusesource.m2</id>
	<url>http://repo.fusesource.com/nexus/content/groups/public</url>
 </pluginRepository>


 <pluginRepository>
	<id>redhat</id>
	<url>https://maven.repository.redhat.com/ga/</url>
 </pluginRepository>




</pluginRepositories>

	
	 <profiles>
    <profile>
      <id>f8-build</id>
      <build>
        <defaultGoal>clean install docker:build fabric8:json</defaultGoal>
      </build>
    </profile>
    <profile>
      <id>f8-deploy</id>
      <properties>
        <fabric8.imagePullPolicySnapshot>Always</fabric8.imagePullPolicySnapshot>
        <fabric8.recreate>true</fabric8.recreate>
      </properties>
      <build>
        <defaultGoal>clean install docker:build docker:push fabric8:json fabric8:apply</defaultGoal>
      </build>
    </profile>
    <profile>
      <id>f8-local-deploy</id>
      <properties>
        <fabric8.recreate>true</fabric8.recreate>
      </properties>
      <build>
        <defaultGoal>clean install docker:build fabric8:json fabric8:apply</defaultGoal>
      </build>
    </profile>
  </profiles>
	
</project>